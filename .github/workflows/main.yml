name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout source
      uses: actions/checkout@v3

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: üîç Verify players_large.json exists
      run: |
        if [ -f players_large.json ]; then
          echo "‚úÖ players_large.json found"
          cat players_large.json | head -n 5
        else
          echo "‚ùå players_large.json is missing!"
          exit 1
        fi

    - name: üìÅ Generate unique version label and zip app
      run: |
        TIMESTAMP=$(date +%s)
        VERSION_LABEL="build-${GITHUB_SHA::8}-${TIMESTAMP}"
        echo "version_label=$VERSION_LABEL" >> $GITHUB_ENV
        echo "üì¶ Using version: $VERSION_LABEL"
        zip -r app.zip . -x ".git/*"

    - name: ‚ùå Delete version if it already exists
      run: |
        aws elasticbeanstalk delete-application-version \
          --application-name "${{ secrets.EB_APP_NAME }}" \
          --version-label "$version_label" \
          --delete-source-bundle \
          --region "${{ secrets.AWS_REGION}" || echo "üîÅ Version not found, skipping delete."

    - name: üöÄ Deploy to Elastic Beanstalk using session token
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
        region: ${{ secrets.AWS_REGION }}
        application_name: ${{ secrets.EB_APP_NAME }}
        environment_name: ${{ secrets.EB_ENV_NAME }}
        version_label: ${{ env.version_label }}
        deployment_package: app.zip
        use_existing_version_if_available: false
